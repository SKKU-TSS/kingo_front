{"version":3,"sources":["assets/activeDashboard.svg","assets/dashboard.svg","assets/transactions.svg","assets/activeTransactions.svg","colors.js","components/public/Navbar.js","ServerConst.js","remote/AccountInfo.js","components/mypoint/TotalPoint.js","components/dashboard/PointStatus.js","components/dashboard/PointPieChart.js","components/dashboard/AccountInfo.js","components/dashboard/RecentTransaction.js","pages/DashBoard.js","remote/response/HandleTransaction.js","remote/TransactionAll.js","assets/kakaoTalk.png","components/mypoint/SendItem.js","components/mypoint/TransactionTable.js","components/mypoint/MyPointAll.js","remote/TransactionSend.js","components/mypoint/MyPointSend.js","remote/TransactionReceive.js","components/mypoint/MyPointReceive.js","remote/GraphData.js","components/mypoint/PointGraph.js","components/mypoint/TypeButton.js","pages/MyPoint.js","remote/GetHash.js","remote/GetHashResult.js","components/transaction/CheckTransactions.js","components/transaction/Clock.js","pages/Transaction.js","connector/index.js","components/login/WalletConnect.js","pages/Login.js","redux/skkusign/const.js","CookieConst.js","pages/skkuLogin.js","redux/skkusign/action.js","App.js","library/index.js","remote/SkkuLogin.js","redux/skkusign/reducer.js","redux/reducer.js","index.js"],"names":["SKKUGREEN","SKKUBLUE","SKKUBLUE_100","NavTitle","fontSize","fontWeight","color","BtnNavigation","indexState","btnIndex","nav","icon","children","index","setIndex","undefined","_icon","_activeIcon","styleHstack","width","backgroundColor","borderRadius","onClick","as","RouterLink","to","p","spacing","style","src","NavBar","state","path","window","location","pathname","split","pop","getIndex","useState","bg","minW","h","justify","dashboard","activeDashboard","transactions","activeTransactions","BACKEND_URL","getUserInfo","account","callback","axios","get","params","id","then","response","TotalPointView","useMediaQuery","isLessThan1195","justifyContent","background","height","m","sumPoint","TopText","w","CountText","TotalPoint","pointArr","setPointArr","useWeb3React","useEffect","isSubscribed","concat","data","_pointA","_pointB","_pointC","_pointD","reducePointData","i","length","sumTotalPoint","Balance","PointItem","title","point","focus","setFocus","styleContainer","onPointerEnter","onPointerLeave","PointStatus","DASHBAORD_WIDTH","align","bgColor","MyAccountAddr","parseAccount","substring","label","BtnKlaytn","etherscanAccount","Link","isExternal","href","AccountInfo","accountSting","parseAccountForColor","console","log","styleVstack","styleFlex","fontFamily","TransItem","name","value","date","focused","paddingTop","paddingBottom","lineHeight","maxLine","opacity","RecentTransaction","items","map","item","FlexContainer","innerStyle","flexGrow","wrap","DashBoard","PointPieChart","handleTransaction","from","type","hash","sendList","_from","_to","d","push","_type","_point","_date","_hash","getAllTransData","Td","styled","td","Icon","img","props","TextView","content","SourceView","text","BtnHash","link","colorScheme","size","variant","SendItem","transData","kakaoTalk","Table","table","Th","th","DisplayTable","displayedTable","TransactionHead","TransactionTable","bindReceiveData","setSendData","setIpfs","urlList","res","setReceiveData","a","sendData","MyTransactionsAll","setTransData","bindData","getSendData","bindSendData","MyTransactionsSend","getRecieveData","MyTransactionsReceive","receiveData","getGraphData","change_date","published_at","require","moment","format","PointGraph","Date","pointState","setPointState","setTodayState","now","getDate","nDate","setDate","getDateArr","Day_1","Day_2","Day_3","Day_4","Day_5","Day_6","Today","chartdata","mapChartData","ResponsiveContainer","debounce","LineChart","margin","top","right","left","bottom","XAxis","dataKey","YAxis","Tooltip","itemStyle","contentStyle","wrapperStyle","padding","border","Line","dot","stroke","TypeButton","num","set","MyPoint","flexDirection","marginBottom","marginTop","MyPointSend","getHash","receipt","arr","Array","v","ret","getHashResult","setHashUrl","CheckTransactions","hashUrl","setValue","extractUrlList","TransactionList","result","TransactionItem","ItemIndex","ItemHash","ItemReceipt","getUrl","ItemHashUrl","Clock","minutes","setMinutes","seconds","setSeconds","countdown","setInterval","clearInterval","LiveTimeContainer","ViewTitle","TransactionView","onOpenModal","modalOn","LastTransactionHead","TimerNext","TimerTitle","TimerField","BtnMore","LastBlock","Transaction","setModalOn","injectedConnector","InjectedConnector","supportedChainIds","LoginTitle","LoginSub","BtnInstall","BtnConnect","WalletConnect","activate","active","Login","SKKU_LOGIN","COOKIE_EMAIL","Header","bgImage","bgPosition","bgRepeat","bgSize","TextField","placeholder","savedText","setForm","onChange","textValue","setTextValue","useCallback","event","target","BtLogin","SKKULoginPage","dispatch","useDispatch","pw","form","useCookies","emailCookie","setEmailCookie","savedEmail","setSavedEmail","LOGIN_EMAIL","username","AppWrap","div","App","document","maxW","minH","exact","component","getLibrary","provider","library","Web3Provider","pollingInterval","skkuLogin","success","failed","url","method","headers","Origin","Referer","Accept","userid","catch","error","initState","skkuReducer","action","reducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a481d057.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/activeDashboard.1ff20a37.svg\";","export default __webpack_public_path__ + \"static/media/dashboard.34c573ce.svg\";","export default __webpack_public_path__ + \"static/media/transactions.011c70e3.svg\";","export default __webpack_public_path__ + \"static/media/activeTransactions.4b7d4077.svg\";","const SKKUGREEN = '#8dc73f'\nconst SKKUORNAGE = '#ff6c0f'\nconst SKKUORANGE_100 = `#ffAc4f`\nconst SKKUBLUE = '#003e74'\nconst SKKUBLUE_100 = '#7db6e8'\nconst SKKUGREEN_100 = '#d2e9b4'\nexport {SKKUGREEN, SKKUORNAGE, SKKUBLUE, SKKUORANGE_100, SKKUBLUE_100, SKKUGREEN_100};","// 모든 페이지에 들어가는 부분으로 왼쪽에 있는 메뉴바 구성\nimport { useState } from \"react\";\nimport { VStack, HStack, Img, Text, Link } from \"@chakra-ui/react\";\nimport activeDashboard from \"../../assets/activeDashboard.svg\";\nimport dashboard from \"../../assets/dashboard.svg\";\nimport transactions from \"../../assets/transactions.svg\";\nimport activeTransactions from \"../../assets/activeTransactions.svg\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { SKKUBLUE } from \"../../colors\";\n\n\nconst INDEX_DASHBOARD = 0;\nconst INDEX_POINT = 1;\nconst INDEX_TRANSACTION = 2;\nconst INDEX_ADMIN = 3;\n\nfunction getIndex(state){\n  const [index, setIndex] = state;\n  const path = window.location.pathname.split(\"/\").pop();\n\n  if (path === \"/dashboard\") {\n    index !== INDEX_DASHBOARD && setIndex(INDEX_DASHBOARD);\n  } else if (path === \"my-transaction\") {\n    index !== INDEX_POINT && setIndex(INDEX_POINT);\n  } else if (path === \"check-transactions\") {\n    index !== INDEX_TRANSACTION  && setIndex(INDEX_TRANSACTION );\n  }\n  return [index, setIndex];\n}\n\n\nfunction NavBar() {\n  // 좌측 navbar 구현\n\n  const [index, setIndex] = getIndex(useState(0));\n  \n\n  return (\n    <VStack spacing={8} p={9} bg=\"#ffffff\" minW=\"200px\">\n      <NavTitle/>\n      <VStack h=\"full\" justify=\"space-between\" spacing={5}>\n        <VStack>\n          <BtnNavigation indexState={[index,setIndex]} btnIndex={INDEX_DASHBOARD} nav=\"/dashboard\" icon={[dashboard, activeDashboard]}>대시보드</BtnNavigation>\n          <BtnNavigation indexState={[index,setIndex]} btnIndex={INDEX_POINT} nav=\"/my-point\" icon={[transactions, activeTransactions]}>Point 현황</BtnNavigation>\n          {/**  <BtnNavigation indexState={[index,setIndex]} btnIndex={INDEX_ADMIN} nav=\"/admin-page\">관리자 페이지</BtnNavigation> */}\n        </VStack>\n        <BtnNavigation indexState={[index,setIndex]} btnIndex={INDEX_TRANSACTION} nav=\"/check-transactions\" >Transaction</BtnNavigation>\n      </VStack>\n    </VStack>\n  );\n}\nconst NavTitle = () =>{\n\n  return(<HStack>\n    <Text fontSize=\"xl\" fontWeight=\"900\" color={SKKUBLUE}>\n      KingoKoin\n    </Text>\n  </HStack>);\n}\n\n\nconst BtnNavigation = ({indexState, btnIndex, nav, icon, children}) =>{\n  const [index,setIndex] = indexState;\n  const [_icon, _activeIcon] = icon || [undefined, undefined];\n  const styleHstack = {\n    width : \"130px\",\n    backgroundColor : index === btnIndex ? SKKUBLUE : \"#ffffff\",\n    borderRadius : \"5px\"\n  };\n  return(<Link onClick={() => setIndex(btnIndex)} as={RouterLink} to={nav}>\n  <HStack    p={3}    spacing={3} style={styleHstack}>\n    {icon && \n      (<Img src={index === btnIndex ? _activeIcon : _icon} />)\n    }\n    <Text\n      fontSize=\"sm\"\n      fontWeight=\"bold\"\n      color={index === btnIndex ? \"#ffffff\" : \"#A3AED0\"}\n    >\n      {children}\n    </Text>\n  </HStack>\n</Link>);\n}\n\n\nexport default NavBar;","const BACKEND_URL = \"http://localhost:5000/\";\n\nexport default BACKEND_URL;","import axios from \"axios\";\nimport BACKEND_URL from \"../ServerConst\";\n\n\nfunction getUserInfo(account, callback){\n\n    axios\n        .get(BACKEND_URL + \"api/userinfo\", {\n          params: {\n            id: account,\n          },\n        }).then(\n          (response) =>{\n            callback(response);\n          }\n        )\n  \n  };\n\nexport default getUserInfo;","import { Text, HStack, Box, VStack, useMediaQuery } from \"@chakra-ui/react\";\nimport { useState, useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport getUserInfo from \"../../remote/AccountInfo\";\nimport { SKKUBLUE, SKKUGREEN } from \"../../colors\";\n\n\nconst TEXT_TOTAL_TITLE = \"총 보유 포인트\"\n\n\n\n\n\nfunction reducePointData(response, pointArr)\n{\n  return pointArr.concat(\n    response.data[0]._pointA,\n    response.data[0]._pointB,\n    response.data[0]._pointC,\n    response.data[0]._pointD\n  );\n};\n\n\n\n\nconst TotalPoint = () => {\n  // 모든 플랫폼의 포인트의 합을 보여주는 컴포넌트\n\n  const [pointArr, setPointArr] = useState([]);\n  const { account } = useWeb3React();\n\n  useEffect(() => {\n    let isSubscribed = true;\n    getUserInfo(account,(response) =>{\n      if (isSubscribed) {\n        setPointArr(\n          reducePointData(response,pointArr));\n      }\n    })\n    return () => (isSubscribed = false);\n  }, []);\n\n  const sumTotalPoint = () => {\n    let sumPoint = 0;\n    for (let i = 0; i < pointArr.length; i++) {\n      sumPoint += pointArr[i];\n    }\n    return sumPoint;\n  };\n\n  const sumPoint = sumTotalPoint();\n\n  \n  \n  return (\n    <TotalPointView>{sumPoint}</TotalPointView>\n  );\n}\n\nconst TotalPointView = ({children}) =>{\n  const [isLessThan1195] = useMediaQuery(\"(max-width:1195px)\");\n  const style = {\n    justifyContent :\"space-between\",\n    background : SKKUGREEN,\n    //backgroundImage : `linear-gradient(#532DFB,${SKKUBLUE})`,\n    width : isLessThan1195 ? \"100%\" : \"96%\",\n    height : \"204px\",\n    borderRadius : \"15px\"\n  }\n\n\n  return(\n    <VStack\n    p={5}\n    m={3}\n    style = {style}\n  >\n    <TopText/>\n    <CountText sumPoint={children}/>\n  </VStack>\n  );\n}\n\nconst TopText = () => {\n  return(\n    <HStack w=\"full\" justify=\"space-between\">\n        <Text color=\"white\" fontWeight=\"700\" fontSize=\"3xl\">\n         {TEXT_TOTAL_TITLE}\n        </Text>\n        <Box />\n      </HStack>\n  );\n};\n\nconst CountText = ({sumPoint}) =>{\n  return(<HStack w=\"full\" justify=\"space-between\">\n        <Box />\n        <Text color=\"white\" fontWeight=\"700\" fontSize=\"5xl\">\n          {sumPoint} point\n        </Text>\n      </HStack>);\n}\n\nexport default TotalPoint;","import { VStack, HStack, Text, useMediaQuery, Box } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport getUserInfo from \"../../remote/AccountInfo\";\nimport { DASHBAORD_WIDTH } from \"../../pages/DashBoard\";\nimport { SKKUORANGE_100, SKKUORNAGE } from \"../../colors\";\n\nconst TEXT_POINT_INFO = '포인트 현황';\n\nconst PointStatus = () => {\n  // 플랫폼 별 포인트 보유량을 볼 수 있도록 한 컴포넌트\n  const [pointArr, setPointArr] = useState([]);\n  const { account } = useWeb3React();\n\n  useEffect(() => {\n    let isSubscribed = true;\n\n    getUserInfo(account,(response)=>{\n        if (isSubscribed) {\n          setPointArr(\n            pointArr.concat(\n              response.data[0]._pointA,\n              response.data[0]._pointB,\n              response.data[0]._pointC,\n              response.data[0]._pointD\n            )\n          );\n        }\n      });\n    return () => (isSubscribed = false);\n  }, []);\n\n  const [isLessThan1195] = useMediaQuery(\"(max-width:1195px)\");\n  \n  \n  \n  const style = {\n    borderRadius : \"15px\",\n    backgroundColor : \"white\",\n    height:  \"355px\",\n    width : isLessThan1195 ? \"100%\" : DASHBAORD_WIDTH\n  }\n  \n  \n  \n  return (\n    <VStack\n      style = {style}      p={8}      align=\"flex-start\"      m={3}    >\n      <Balance />\n      <VStack w=\"full\">\n        \n        <PointItem title = \"온라인 명륜당\" point = {pointArr[0]}/>\n        <PointItem title = \"킹고인과의 만남\" point = {pointArr[1]}/>\n        <PointItem title = \"해오름제\" point = {pointArr[2]}/>\n        <PointItem title = \"멘토링\" point = {pointArr[3]}/>\n\n      </VStack>\n    </VStack>\n  );\n}\n\nconst Balance = () =>{\n\n  return(<VStack spacing={0}  p = {2}>\n    <Text fontSize = '2xl'>Balance</Text>\n    <Box backgroundColor={SKKUORNAGE} borderRadius='4px' width='100%' height='4px'/>\n  </VStack>)\n}\n\nconst PointItem = ({title, point}) =>{\n\n  const [focus, setFocus] = useState(false);\n\n\n  const styleContainer = {\n    width : \"100%\",\n    justifyContent : \"space-between\",\n    borderRadius : \"10px\",\n    backgroundColor : focus && SKKUORANGE_100,\n    height : '50px'\n  }\n\n  return(<HStack style = {styleContainer} p={2}\n    onPointerEnter = {()=>setFocus(true)}\n    onPointerLeave = {()=>setFocus(false)}\n  >\n  <Text fontSize=\"lg\">{title}</Text>\n  <Text fontSize=\"lg\">{`${point || 0}포인트`}</Text>\n</HStack>)\n}\n\nexport default PointStatus;","import { VStack, HStack, Text, useMediaQuery, Box } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport getUserInfo from \"../../remote/AccountInfo\";\nimport { DASHBAORD_WIDTH } from \"../../pages/DashBoard\";\nimport { SKKUBLUE, SKKUBLUE_100 } from \"../../colors\";\n\nconst TEXT_POINT_INFO = 'Pie Chart';\n\n\nfunction PointStatus() {\n  // 플랫폼 별 포인트 보유량을 볼 수 있도록 한 컴포넌트\n  const [pointArr, setPointArr] = useState([]);\n  const { account } = useWeb3React();\n\n  useEffect(() => {\n    let isSubscribed = true;\n    getUserInfo(account, (response) =>{\n        if (isSubscribed) {\n          setPointArr(\n            [].concat(\n              response.data[0]._pointA,\n              response.data[0]._pointB,\n              response.data[0]._pointC,\n              response.data[0]._pointD\n            )\n          );\n        }\n      });\n    return () => (isSubscribed = false);\n  }, []);\n\n  const [isLessThan1195] = useMediaQuery(\"(max-width:1195px)\");\n\n\n  const style = {\n    borderRadius : \"15px\",\n    backgroundColor : \"white\",\n    height:  \"355px\",\n    width : isLessThan1195 ? \"100%\" : DASHBAORD_WIDTH\n  }\n  return (\n    <VStack\n      style = {style}      p={8}      align=\"flex-start\"      m={3}    >\n       <VStack spacing = {0} p={2}>\n            <Text \n              fontSize = '24px'\n            >{TEXT_POINT_INFO}</Text>\n            <Box backgroundColor={SKKUBLUE} borderRadius='4px' width='100%' height='4px'/>\n          </VStack>\n      <VStack  w=\"full\">\n        <PointItem title = \"Service A\" point = {pointArr[0]}/>\n        <PointItem title = \"Service B\" point = {pointArr[1]}/>\n        <PointItem title = \"Service C\" point = {pointArr[2]}/>\n        <PointItem title = \"Service D\" point = {pointArr[3]}/>\n      </VStack>\n    </VStack>\n  );\n}\n\nconst PointItem = ({title, point}) =>{\n\n  const [focus, setFocus] = useState(false)\n\n\n  return(<HStack w=\"full\" justify=\"space-between\"\n  height = '50px'\n  borderRadius = '10px'\n  p = {2}\n  bgColor = {focus && SKKUBLUE_100}\n  onPointerEnter = {()=>setFocus(true)}\n  onPointerLeave = {()=>setFocus(false)}\n  >\n  <Text fontSize=\"lg\">{title}</Text>\n  <Text fontSize=\"lg\">{point}</Text>\n</HStack>);\n}\n\nexport default PointStatus;","//DashBoard page에 사용됨\n//내 지갑 주소와 클릭시 해당 주소의 클레이튼 스코프로 연결시켜주는 부분\nimport {\n  VStack,\n  Box,\n  Flex,\n  Text,\n  Button,\n  Link,\n  useMediaQuery,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { m } from \"framer-motion\";\nimport { DASHBAORD_WIDTH } from \"../../pages/DashBoard\";\n\nconst TEXT_MY_ACCOUNT = '내 지갑 주소 : ';\n\n\nfunction AccountInfo() {\n  // klaytn 사이트에서 내 계정 정보를 볼 수 있도록 하는 컴포넌트\n  const [isLessThan1195] = useMediaQuery(\"(max-width:1195px)\");\n  const { account } = useWeb3React();\n\n  const accountSting = account?.substring(2, 6);\n\n  const parseAccountForColor = \"#\" + account?.substring(2, 8);\n  \n  //klaythn scope 에서 내 계정에 관한 리스트\n\n  console.log(parseAccountForColor);\n\n  const styleVstack = {\n    borderRadius : \"15px\",\n    width : isLessThan1195 ? \"100%\" : DASHBAORD_WIDTH,\n    height : \"355px\",\n    justifyContent : \"center\",\n    spacing : \"5\",\n    backgroundColor : \"white\"\n  }\n\n  const styleFlex = {\n    width : \"110px\",\n    height : \"110px\",\n    align : \"center\",\n    justifyContent : \"center\",\n    borderRadius : \"100px\",\n    fontFamily : \"'Pacifico', cursive\",\n    fontSize : \"3xl\",\n    backgroundColor : parseAccountForColor,\n  }\n\n\n\n  return (\n    <VStack p={10} m={3} spacing={5} style = {styleVstack}>\n      <Flex align=\"center\" fontSize=\"3xl\" style = {styleFlex}>\n        {accountSting}\n      </Flex>\n      <MyAccountAddr account = {account}/>\n      {account && (\n        <BtnKlaytn account={account}/>\n      )}\n    </VStack>\n  );\n}\n\nconst MyAccountAddr = ({account}) =>{\n\n  const parseAccount =\n  account && account?.substring(0, 10) + \"...\" + account?.substring(32, 40);\n\n  return(<VStack>\n    <Text fontSize=\"lg\">{TEXT_MY_ACCOUNT}</Text>\n    <Tooltip label={account}>\n      <Text>{parseAccount}</Text>\n    </Tooltip>\n  </VStack>);\n}\n\nconst BtnKlaytn = ({account}) =>{\n  const etherscanAccount = `https://baobab.scope.klaytn.com/account/${account}?tabId=txList`;\n  return(<Button as={Link} isExternal href={etherscanAccount}>\n    View on klaytn scope\n  </Button>)\n}\n\nexport default AccountInfo;","import { VStack, HStack, Text, useMediaQuery, Flex, Box, Spacer } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport getUserInfo from \"../../remote/AccountInfo\";\nimport { SKKUGREEN, SKKUGREEN_100 } from \"../../colors\";\nimport { DASHBAORD_WIDTH } from \"../../pages/DashBoard\";\n\nconst TEXT_POINT_INFO = '포인트 현황';\n\nconst RecentTransaction= () => {\n  // 플랫폼 별 포인트 보유량을 볼 수 있도록 한 컴포넌트\n  const { account } = useWeb3React();\n\n    let isSubscribed = true;\n\n  \n    \n  const [items, setItems] = useState([\n    {\n      name : '온라인 명륜당 영상 시청',\n      value : 1050,\n      date : \"2022. 07. 13\"\n    },\n    {\n      name : '온라인 명륜당 게시글 작성',\n      value : 230,\n      date : \"2022. 07. 13\"\n    },\n    {\n      name : '실리콘벨리 졸업생 특강 참여',\n      value : 5600,\n      date : \"2022. 07. 13\"\n    },\n    {\n      name : '토익 강의 이용권',\n      value : -100,\n      date : \"2022. 07. 13\"\n    },\n  ])\n  const [isLessThan1195] = useMediaQuery(\"(max-width:1195px)\");\n  const style = {\n    borderRadius : \"15px\",\n    backgroundColor : \"white\",\n    height:  \"355px\",\n    width : isLessThan1195 ? \"100%\" : DASHBAORD_WIDTH\n  }\n  \n  \n  return (\n  \n        <VStack  style = {style} p={8} align=\"flex-start\"   m={3} spacing = {0}>\n\n          <VStack p={2}>\n            <Text \n              fontSize = '24px'\n            >Recent Transactions</Text>\n            <Box backgroundColor={SKKUGREEN} borderRadius='4px' width='100%' height='4px'/>\n          </VStack>\n          \n      {\n        items.map(item=>{\n          return <TransItem name = {item.name} value = {item.value} date = {item.date}/>\n        })\n      }    \n    </VStack>\n\n    \n  );\n}\n\n\nconst TransItem = ({name, value, date}) =>{\n\n  const [focused,setFocus] = useState(false)\n\n\n  return(\n    <VStack align = 'left' width = \"100%\" spacing={0} p = {2} paddingTop = {1} paddingBottom = {1}\n    bgColor = {focused && SKKUGREEN_100}\n    borderRadius =\"10px\"\n      onPointerEnter ={()=>setFocus(true)}\n      onPointerLeave = {()=>setFocus(false)}\n    >\n      <Flex \n        \n        >\n          <Text fontSize=\"15px\" lineHeight = \"25px\" fontFamily='noto-sans kr' m={0}>\n            {name}\n          </Text>\n          <Spacer/>\n          <Text  fontSize=\"15px\" lineHeight = \"25px\" fontWeight=\"500\" maxLine = {1}>\n            {`${value}포인트`}\n          </Text>\n\n          \n      </Flex>\n\n      <Text fontSize=\"12px\" lineHeight = \"25px\" color=\"#2B2B2B\" opacity={0.4}>\n        {date}\n      </Text>\n    </VStack>\n  )\n}\n\nexport default RecentTransaction;","import {\n    HStack,\n    Text,\n    VStack,\n    Flex,\n    Box,\n    useMediaQuery,\n  } from \"@chakra-ui/react\";\n  import TotalPoint from \"../components/mypoint/TotalPoint\";\n  import PointStatus from \"../components/dashboard/PointStatus\";\n  import PointPieChart from \"../components/dashboard/PointPieChart\";\n  import AccountInfo from \"../components/dashboard/AccountInfo\";\nimport RecentTransaction from \"../components/dashboard/RecentTransaction\";\n  \n  function DashBoard() {\n    // 대시보드 페이지\n   \n\n\n\n    return (\n        <FlexContainer>\n          <TotalPoint />\n          <RecentTransaction />\n          <AccountInfo />\n          <PointPieChart />\n          <PointStatus />\n          {/* <AdminPage /> */}\n        </FlexContainer>\n    );\n  }\n\n\n  const FlexContainer = ({children}) =>{\n\n    const [isLessThan1070] = useMediaQuery(\"(max-width:1070px)\");\n\n\n    const outterStyle = {\n        width : \"full\",\n        height : \"full\",\n        justify : \"space-evenly\",\n        backgroundColor : \"#E5E5E5\"\n    }\n\n    const innerStyle = {\n        flexGrow : \"1\",\n        justify : \"space-between\",\n        p : \"5\",\n        minW : \"350px\",\n        w : isLessThan1070 ? \"full\" : \"60%\"\n    }\n\n\n    return(\n      <Flex wrap=\"wrap\"\n      style = {outterStyle}>\n        <Flex\n          wrap=\"wrap\"\n          style = {innerStyle}\n        >\n          {children}\n        </Flex>\n        </Flex>\n    )\n  }\n\n  \n  export default DashBoard;\n\n\nconst DASHBAORD_WIDTH = \"47%\"\n\n  export {\n     DASHBAORD_WIDTH\n  }","function makeObject(from, to, type, value, date, hash)\n{\n  return {\n    from : from,\n    to : to,\n    type : type,\n    value : value,\n    date : date,\n    hash : hash,\n  };\n}\n\n\nfunction handleTransaction(account, response)\n{\n    const sendList = [];\n  for (let i = 0; i < response.data.length; i++) {\n    if (\n      response.data[i]?._from === account ||\n      response.data[i]?._to === account\n    ) {\n      const d = response.data[i];\n      sendList.push(makeObject(d._from, d._to, d._type, d._point, d._date, d._hash));\n    }\n  }\n\n  return sendList;\n}\n\nexport default handleTransaction;","import axios from \"axios\";\nimport BACKEND_URL from \"../ServerConst\";\nimport handleTransaction from \"./response/HandleTransaction\";\n\nfunction getAllTransData(account, callback)\n{\n    return axios\n    .get(`${BACKEND_URL}api/transaction?who=to&address=${account}`).then(\n        function(response){\n\n            //success\n            callback(\n                handleTransaction(account, response)\n            );\n        }\n    );\n\n}\n\nexport default getAllTransData;","export default __webpack_public_path__ + \"static/media/kakaoTalk.846a58ff.png\";","import kakaoTalk from \"../../assets/kakaoTalk.png\";\nimport { HStack, Text, VStack, Flex } from \"@chakra-ui/layout\";\nimport { Button, Link } from \"@chakra-ui/react\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { SKKUBLUE, SKKUBLUE_100, SKKUORANGE_100 } from \"../../colors\";\n\n\n\n\nconst Td = styled.td`\n  text-align: center;\n  padding: 5px;\n`;\nconst Icon = styled.img`\n  src: ${(props) => props.src};\n  width: 20px;\n  margin-left: 10px;\n`;\n\n\nconst SendItem = ({transData, type}) =>{\n\n    const width = 100/ (type ? 5 : 6);\n\n\n    const [focus, setFocus] = useState(false);\n\n    return(<tr\n      onPointerEnter={()=>setFocus(true)} onPointerLeave = {()=>setFocus(false)}\n      bgColor = {focus &&SKKUBLUE_100 }\n    >\n      <SourceView  width = {width + '%'} icon={kakaoTalk} text={\"KakaoPay\"}/>\n      <TextView width = {width + '%'}title = \"Date\" content = {transData.date} focus = {focus}/>\n      { type !== \"from\" && (<TextView width = {width + '%'} title=\"To\" content = {transData.to} focus = {focus}/>)    }\n      { type !== \"to\" && (<TextView width = {width + '%'} title=\"From\" content = {transData.from} focus = {focus}/>)    }\n      {/* <Td>{ipfs[i]}</Td> */}\n      <TextView width = {width + '%'} title = \"Amount\" content = {transData.value} focus = {focus}/>\n      <BtnHash width = {width + '%'} link = {Link} text = {transData.hash} focus = {focus}/>\n    </tr>);\n  }\n\n\n  const TextView = ({title, content, focus}) =>{\n\n    return(\n      <Td >\n\n    <Flex justifyContent=\"center\">\n      <VStack align = \"start\" width = \"60%\" justifyContent=\"start\" >\n        <Text fontSize = 'sm' fontFamily='Poppins' color={focus ? \"white\" : \"#cecece\"}>{title}</Text>\n        <Text fontSize='lg'\n\n        >{content}</Text>\n      </VStack>\n      </Flex>\n    </Td>\n    )\n  }\n\n  const SourceView = ({icon, text}) =>{\n\n    return(\n    <Td>\n      <HStack justifyContent=\"center\">\n        <Icon src={icon} />\n        <Text>{text}</Text>\n      </HStack>\n    </Td>);\n  }\n\n  const BtnHash = ({link, text, focus}) =>{\n\n    return(<Td>\n      <Button colorScheme='green' size=\"md\" variant = {focus ? 'solid': 'outline'} as={link} isExternal>\n        Open Hash\n      </Button>\n    </Td>);\n  }\n\n  export default SendItem;","import styled from \"styled-components\";\nimport { SKKUBLUE } from \"../../colors\";\nimport SendItem from './SendItem'\n\n\n\nconst Table = styled.table`\n  width: 100%;\n  table-layout : fixed;\n`;\n\n\n\nconst Th = styled.th`\n  font-weight: 800;\n  color: ${SKKUBLUE};\n  text-align: center;\n  border-bottom: 2px solid ${SKKUBLUE};\n`;\n\n\n\nconst TransactionTable = ({type, transData}) => {\n    \n    return (\n      <Table>\n        <TransactionHead type = {type}/>\n        <DisplayTable type = {type} transData = {transData}/>\n      </Table>\n    );\n  };\n\nconst DisplayTable = ({type, transData}) =>{\n  const displayedTable = [];\n    for (let i = 0; i < transData.length; i++) {\n      displayedTable.push(\n          <SendItem transData={transData[i]} key={i} type = {type}/>\n      );\n    }\n  return(<tbody>{displayedTable}</tbody>);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  const TransactionHead = ({type}) =>{\n\n\n    \n    return(<thead>\n      <tr>\n        <Th>플랫폼</Th>\n        <Th>시간</Th>\n        {\n            type !== \"from\" && (<Th>TO</Th>)\n        }\n        {\n            type !== \"to\" && (<Th>FROM</Th>)\n        }\n        <Th>금액</Th>\n        <Th>HASH</Th>\n      </tr>\n    </thead>)\n  }\n\n  export default TransactionTable;","//Point 현황에 드가는 메뉴\n// 내 지갑 Address와 관련된 모든 내역을 보여준다.\n\n\nimport { useState, useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport axios from \"axios\";\n// import ipfsClient from \"ipfs-http-client\";\nimport getAllTransData from \"../../remote/TransactionAll\";\nimport TransactionTable from \"./TransactionTable\";\n\nfunction bindReceiveData(sendList, setSendData, setIpfs){\n  \n  const urlList = [];\n\n  setSendData(sendList);\n\n  for (let i = 0; i < sendList.length; i++) {\n    axios\n      .get(`http://localhost:5000/api/result/${sendList[i].hash}`)\n      .then((res) => urlList.push(res.data));\n  }\n  setIpfs(urlList);\n}\n\nasync function bindData(account, setReceiveData, setIpfs)\n{\n    await getAllTransData(account, (sendData) =>{\n      // console.log(response.data[1]._from);\n      bindReceiveData(sendData,setReceiveData,setIpfs)\n    });\n}\n\nexport default function MyTransactionsAll() {\n  // 나와 관련된 모든 트랜잭션을 볼 수 있는 컴포넌트\n\n\n  const [ipfs, setIpfs] = useState([]);\n\n  const [transData, setTransData] = useState([]);\n\n  const { account } = useWeb3React();\n\n  const config = {\n    rpcURL: \"https://api/baobab.klaytn.net:8651\",\n  };\n\n  const naver = \"https://www.naver.com/\";\n\n  useEffect(() => {\n    bindData(account, setTransData, setIpfs);\n  }, []);\n\n  return (<TransactionTable transData={transData}/>);\n}","import axios from \"axios\";\nimport BACKEND_URL from \"../ServerConst\";\nimport handleTransaction from \"./response/HandleTransaction\";\n\nfunction getSendData(account, callback)\n{\n    return axios\n    .get(`${BACKEND_URL}api/transaction?who=from&address=${account}`).then(\n        function(response){\n\n            //success\n            callback(\n                handleTransaction(account, response)\n            );\n        }\n    );\n\n}\n\nexport default getSendData;","//Point 현황에 드가는 메뉴\n// 내 지갑 Address와 관련된 내역 중 내가 Point를 사용한 부분만을 보여준다.\nimport { useState, useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport axios from \"axios\";\n\nimport { TabsDescendantsProvider } from \"@chakra-ui/react\";\nimport getSendData from \"../../remote/TransactionSend\";\nimport TransactionTable from \"./TransactionTable\";\n\n\n\n\n\nfunction bindSendData(sendList, setSendData, setIpfs){\n  \n  const urlList = [];\n\n  setSendData(sendList);\n\n  for (let i = 0; i < sendList.length; i++) {\n    axios\n      .get(`http://localhost:5000/api/result/${sendList[i].hash}`)\n      .then((res) => urlList.push(res.data));\n  }\n  setIpfs(urlList);\n}\n\nasync function bindData(account, setSendData, setIpfs)\n{\n    await getSendData(account, (sendData) =>{\n      // console.log(response.data[1]._from);\n      bindSendData(sendData,setSendData,setIpfs)\n    });\n}\n\n const MyTransactionsSend = () => {\n  // 내가 포인트를 사용하는 트랜잭션을 볼 수 있도록한 컴포넌트\n  const [ipfs, setIpfs] = useState([]);\n\n  const [sendData, setSendData] = useState([]);\n\n  const { account } = useWeb3React();\n\n  const config = {\n    rpcURL: \"https://api/baobab.klaytn.net:8651\",\n  };\n\n  const naver = \"https://www.naver.com/\";\n\n\n\n\n\n  useEffect(() => {\n    // console.log(caver);\n    bindData(account,setSendData,setIpfs);\n   \n   setSendData([{\n    from : \"2020\",\n    to : \"홍길동\",\n    type : \"\",\n    value : \"1,842\",\n    date : \"2021. 07. 12\",\n    hash : \"hashid\",\n   }])\n   \n  }, []);\n\n\n  return (<TransactionTable type = \"to\" transData={sendData}/>);\n\n\n}\n\nexport default MyTransactionsSend;","import axios from \"axios\";\nimport BACKEND_URL from \"../ServerConst\";\nimport handleTransaction from \"./response/HandleTransaction\";\n\nfunction getRecieveData(account, callback)\n{\n    return axios\n    .get(`${BACKEND_URL}api/transaction?who=to&address=${account}`).then(\n        function(response){\n\n            //success\n            callback(\n                handleTransaction(account, response)\n            );\n        }\n    );\n\n}\n\nexport default getRecieveData;","//Point 현황에 드가는 메뉴\n// 내 지갑 Address와 관련된 내역 중 내가 Point를 획득한 부분만을 보여준다.\nimport styled from \"styled-components\";\nimport kakaoTalk from \"../../assets/kakaoTalk.png\";\nimport { HStack, Text } from \"@chakra-ui/layout\";\nimport { useState, useEffect } from \"react\";\nimport { Button, Link } from \"@chakra-ui/react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport axios from \"axios\";\nimport getRecieveData from \"../../remote/TransactionReceive\";\nimport TransactionTable from \"./TransactionTable\";\n\n\n\nfunction bindReceiveData(sendList, setSendData, setIpfs){\n  \n  const urlList = [];\n\n  setSendData(sendList);\n\n  for (let i = 0; i < sendList.length; i++) {\n    axios\n      .get(`http://localhost:5000/api/result/${sendList[i].hash}`)\n      .then((res) => urlList.push(res.data));\n  }\n  setIpfs(urlList);\n}\n\nasync function bindData(account, setReceiveData, setIpfs)\n{\n    await getRecieveData(account, (sendData) =>{\n      // console.log(response.data[1]._from);\n      bindReceiveData(sendData,setReceiveData,setIpfs)\n    });\n}\n\nexport default function MyTransactionsReceive() {\n  // 내가 포인트를 받는 트랜잭션을 볼 수 있도록 한 컴포넌트\n  const [ipfs, setIpfs] = useState([]);\n\n  const [receiveData, setReceiveData] = useState([]);\n\n  const { account } = useWeb3React();\n\n  useEffect(() => {\n    bindData(account,setReceiveData,setIpfs);\n  }, []);\n  \n  return (<TransactionTable type=\"from\" transData={receiveData}/> );\n}","import axios from \"axios\";\nimport BACKEND_URL from \"../ServerConst\";\n\n\nfunction getGraphData(account, callback){\n\n    axios\n        .get(BACKEND_URL + \"api/graph\", {\n          params: {\n            id: account,\n          },\n        }).then(\n          (response) =>{\n            callback(response);\n          }\n        )\n  \n  };\n\nexport default getGraphData;","import { useState, useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport axios from \"axios\";\nimport {\n  LineChart,\n  Line,\n  Tooltip,\n  YAxis,\n  XAxis,\n  CartesianGrid,\n  ResponsiveContainer,\n} from \"recharts\";\n\nimport getGraphData from \"../../remote/GraphData\";\n\n\nfunction change_date(published_at) {\n  var moment = require(\"moment\");\n  const publish_date = moment(published_at).format(\"YYYY년 MM월 DD일\");\n  return publish_date;\n}\n\n\nfunction getDateArr(){\n  var now = new Date().getDate(); // 현재 날짜 및 시간\n  var date = [];\n  var i ;\n  for(i = 0 ; i < 6;i++)\n  {\n    const nDate = change_date(new Date(new Date().setDate(now - 6 + i)));\n    date.push(nDate);\n  }\n  return date;\n\n}\n\nfunction mapChartData(date, pointState)\n{\n  var chartdata = [];\n  var i = 0;\n  for(i=0; i<6; i++)\n  {\n    chartdata.push({\n      date : date[i],\n      point : pointState[i]\n    });\n  }\n  return chartdata;\n}\n\n\n\nexport default function PointGraph() {\n  //날짜별 포인트 변화를 꺾은 선 그래프로 보여주는 컴포넌트\n \n  \n  var Today = change_date(new Date());\n\n  const [pointState, setPointState] = useState([0,1,5,4,0,0]);\n  const [TodayState, setTodayState] = useState(0);\n\n  const date = getDateArr();\n\n  const { account } = useWeb3React();\n  useEffect(() => {\n    getGraphData(account,response => {\n        console.log(response.data);\n        const d = response.data[0];\n        if(d !== null && d !== undefined)\n        {\n          setPointState(\n            [d.Day_1, d.Day_2, d.Day_3, d.Day_4, d.Day_5, d.Day_6]\n          );\n          setTodayState(d.Today);\n        }  \n      });\n  }, []);\n\n\n  const chartdata = mapChartData(date,pointState);\n  \n  return (\n    <ResponsiveContainer width=\"95%\" height={210} debounce={1}>\n      <LineChart\n        data={chartdata}\n        margin={{ top: 5, right: 30, left: 15, bottom: 2 }}\n      >\n        <XAxis dataKey=\"date\" />\n        <YAxis />\n        <Tooltip\n          itemStyle={{ fontSize: \"5px\" }}\n          contentStyle={{ fontSize: \"0px\" }}\n          wrapperStyle={{ padding: 0, border: \"none\" }}\n        />\n        <Line dot={true} type=\"line\" dataKey=\"point\" stroke=\"#4318ff\" />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}","import { Button } from \"@chakra-ui/react\"\nimport { SKKUBLUE } from \"../../colors\";\n\nconst TypeButton = ({title, num, index, set})=>{\n\n\n    return(<Button onClick = {()=>set(num)}\n        size = 'xs'\n        backgroundColor = {index === num ? SKKUBLUE : 'white'}\n        color = {index === num ? 'white' : 'black'}\n    >\n        {title}\n    </Button>);\n}\n\nexport default TypeButton;","import { Flex, HStack, Text, VStack, Box} from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport MyPointAll from \"../components/mypoint/MyPointAll\";\nimport MyPointSend from \"../components/mypoint/MyPointSend\";\nimport MyPointReceive from \"../components/mypoint/MyPointReceive\";\nimport PointGraph from \"../components/mypoint/PointGraph\";\nimport { SKKUBLUE } from \"../colors\";\nimport { Button } from \"@chakra-ui/react\";\nimport TypeButton from \"../components/mypoint/TypeButton\";\n\n\n\n\nfunction MyPoint() {\n  // 내 트랜잭션의 모든 내역, 받은 내역, 사용 내역을 볼 수 있는 페이지\n  const [index, setIndex] = useState(0);\n  return (\n    <Flex m={10} flexDirection=\"column\" w=\"full\">\n      <Text fontSize=\"3xl\" fontWeight=\"700\">\n        My Point 현황\n      </Text>\n      <VStack\n        w=\"full\"\n        backgroundColor=\"white\"\n        borderRadius=\"5px\"\n        p={5}\n        marginBottom={5}\n        marginTop={5}\n      >\n        <PointGraph />\n      </VStack>\n      <HStack>\n          <TypeButton title = 'ALL' set={setIndex} index={index} num={0}/>\n          <TypeButton title = '사용내역' set={setIndex} index={index} num={1}/>\n          <TypeButton title = '받은내역' set={setIndex} index={index} num={2}/>\n      \n      \n      </HStack>\n\n      <VStack\n        w=\"full\"\n        backgroundColor=\"white\"\n        borderRadius={20}\n        p={5}\n        marginTop={5}\n      >\n        {index === 0 && <MyPointAll />}\n        {index === 1 && <MyPointSend />}\n        {index === 2 && <MyPointReceive />}\n      </VStack>\n    </Flex>\n  );\n}\n\n\n\nexport default MyPoint;","import axios from \"axios\";\nimport BACKEND_URL from \"../ServerConst\";\n\n\nfunction getHash(account, callback){\n\n    axios.get(BACKEND_URL + \"api/getHash?address=\" + account).then((response) =>{\n\n\n\n        const _hash = response.data;\n        const hash = _hash[0];\n        const receipt = _hash[1];\n        const arr = Array.from({ length: hash?.length }, (v, i) => i);\n        \n        var i;\n        let ret = []\n        for(i=0;i<hash.length;i++)\n        {\n            ret.push({\n                hash : hash[i],\n                receipt : receipt[i],\n                index : arr[i]\n            })\n        }\n        \n        \n        callback(ret);\n\n    })\n}\n\n\nexport default getHash;","import axios from \"axios\";\nimport BACKEND_URL from \"../ServerConst\";\n\nfunction getHashResult(hash, callback){\n\n    axios.get(BACKEND_URL + \"api/result/\" + hash).then((res) => {\n        callback(res);\n    })\n}\n\nexport default getHashResult;","import { HStack, Text } from \"@chakra-ui/layout\";\nimport styled from \"styled-components\";\nimport kakaoTalk from \"../../assets/kakaoTalk.png\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, Link } from \"@chakra-ui/react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport getHash from \"../../remote/GetHash\";\nimport getHashResult from \"../../remote/GetHashResult\";\nimport { SKKUBLUE } from \"../../colors\";\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst Td = styled.td`\n  text-align: center;\n  padding: 5px;\n`;\n\nconst Th = styled.th`\n  font-weight: 800;\n  color: ${SKKUBLUE};\n  text-align: center;\n  border-bottom: 2px solid ${SKKUBLUE};\n`;\n\nconst Icon = styled.img`\n  src: ${(props) => props.src};\n  width: 20px;\n  alt: \"kakao\";\n`;\n\nconst Time = styled.td`\n  color: #aeb4c4;\n  text-align: center;\n`;\n\nasync function extractUrlList(ret, setHashUrl){\n  let urlList = [];\n  for (let i = 0; i < ret.length; i++) {\n    await getHashResult(ret[i].hash,(res)=>{\n      urlList.push(res.data)\n    });\n  }\n  console.log(urlList);\n  setHashUrl(urlList);\n}\n\nconst CheckTransactions = () => {\n  // 나의 트랜잭션들이 속한 _hash, _hashreceipt, ipfsurl를 확인할 수 있도록 한 컴포넌트\n  // ipfs상에 올라간 tranasaction들을 볼 수 있음.\n  const [hashUrl, setHashUrl] = useState([]);\n  const { account } = useWeb3React();\n  const [value, setValue] = useState([]);\n\n  useEffect(() => {\n    getHash(account,(ret) => {\n      setValue(ret);\n      extractUrlList(ret,setHashUrl);\n    });\n    \n  }, []);\n\n  return (<Table>\n      <TransactionHead/>\n      <TransactionList value = {value} hashUrl = {hashUrl}/>\n      </Table>);\n\n}\n\nexport default CheckTransactions;\n\nconst TransactionHead = () =>{\n\n  return(<thead>\n    <tr>\n      <Th>id</Th>\n      <Th>HASH</Th>\n      <Th>RECEIPT</Th>\n      <Th> IPFS HASH URL </Th>\n    </tr>\n  </thead>);\n}\n\nconst TransactionList = ({value, hashUrl}) =>{\n\n  const result = [];\n\n    for (let i = 0; i < value.length; i++) {\n      console.log(value.length);\n      result.push(\n        <TransactionItem\n            value = {value[i]} hashUrl = {hashUrl[i]}\n        />\n      );\n    }\n    return(<tbody>{result}</tbody>);\n}\n\nconst TransactionItem = ({value, hashUrl}) =>{\n\n\n  return(<tr>\n    <ItemIndex index = {value.index}/>\n    <ItemHash hash = {value.hash}/>\n    <ItemReceipt receipt = {value.receipt}/>\n    <ItemHashUrl hashUrl={hashUrl}/>\n  </tr>);\n};\n\nconst ItemIndex = ({index}) =>{\n\n  return(<Td>\n    <HStack justifyContent=\"center\">\n      <Text>{index}</Text>\n    </HStack>\n  </Td>);\n};\n\nconst ItemHash = ({hash}) =>\n{\n  return(<Td>{hash}</Td>);\n};\n\nconst ItemReceipt = ({receipt}) =>{\n  const getUrl = (receipt) => {\n    return `https://baobab.scope.klaytn.com/tx/${receipt}?tabId=internalTx`;\n  };\n\n  return(<Td>\n    <Button size=\"xs\" as={Link} isExternal href={getUrl(receipt)}>\n      {receipt}\n    </Button>\n  </Td>);\n};\n\nconst ItemHashUrl = ({hashUrl}) =>{\n  return(<Td>\n    <Button size=\"xs\" as={Link} isExternal href={hashUrl}>\n      {hashUrl}\n    </Button>\n  </Td>);\n};","import { HStack, Text } from \"@chakra-ui/layout\";\nimport styled from \"styled-components\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, Link, Box } from \"@chakra-ui/react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport moment from \"moment\";\nimport Moment from \"react-moment\";\nimport \"moment/locale/ko\";\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst Td = styled.td`\n  text-align: center;\n  padding: 5px;\n`;\n\nconst Th = styled.th`\n  font-weight: 800;\n  color: #4318ff;\n  text-align: center;\n  border-bottom: 2px solid #4318ff;\n`;\n\nconst Icon = styled.img`\n  src: ${(props) => props.src};\n  width: 20px;\n  alt: \"kakao\";\n`;\n\nconst Time = styled.td`\n  color: #aeb4c4;\n  text-align: center;\n`;\n\nexport default function Clock() {\n  // 트랜잭션의 ipfs 업로드까지 남은 시간 표시 : 후에 백엔드로부터 정보를 가져올 예정\n\n  const LiveTimeContainer = () => {\n    const [minutes, setMinutes] = useState(59);\n    const [seconds, setSeconds] = useState(59);\n\n    useEffect(() => {\n      const countdown = setInterval(() => {\n        if (seconds > 0) {\n          setSeconds(seconds - 1);\n        }\n        if (seconds === 0) {\n          if (minutes === 0) {\n            clearInterval(countdown);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        }\n      }, 1000);\n      return () => clearInterval(countdown);\n    }, [minutes, seconds]);\n\n    const numPadding = (num)=>{\n      return num < 10 ? `0${num}` : num;\n    }\n\n    return (\n      <>\n        {minutes}:{numPadding(seconds)}\n      </>\n    );\n  };\n\n  return <>{LiveTimeContainer()}</>;\n}","import { Flex, HStack, Text, VStack, Box } from \"@chakra-ui/layout\";\nimport LatestTransactions from \"../components/transaction/CheckTransactions\";\nimport { useState } from \"react\";\nimport Clock from \"../components/transaction/Clock\";\nimport { SKKUBLUE } from \"../colors\";\n\n\nconst TEXT_TITLE = 'Transaction 현황';\nfunction Transaction() {\n  // 내 트랜잭션들이 ipfs 에 올라갔는지 확인할 수 있는 페이지\n  const [modalOn, setModalOn] = useState(false);\n\n  const onOpenModal = () => {\n    setModalOn(!modalOn);\n  };\n  return (\n    <Flex m={10} flexDirection=\"column\" w=\"full\">\n      <ViewTitle/>\n      {/* graph */}\n        <LastBlock/>\n             \n      <TransactionView onOpenModal={onOpenModal} modalOn={modalOn}/>\n    </Flex>\n  );\n}\n\nconst ViewTitle = () =>{\n  return(<Text fontSize=\"3xl\" fontWeight=\"700\">\n  {TEXT_TITLE}\n</Text>)\n}\n\nconst TransactionView = ({onOpenModal, modalOn})=>{\n\n  return(<VStack\n    w=\"full\"\n    backgroundColor=\"white\"\n    borderRadius=\"5px\"\n    p={5}\n    marginTop={5}\n  >\n    <LastTransactionHead onOpenModal={onOpenModal}/>\n    {modalOn ? <LatestTransactions /> : \"\"}\n    <LatestTransactions />\n    <TimerNext/>\n  </VStack>);\n}\n\nconst LastTransactionHead = ({onOpenModal}) =>{\n  return(<HStack justifyContent=\"space-between\" w=\"full\">\n  <Text color={SKKUBLUE} fontWeight={700} fontSize=\"lg\">\n    Latest Transaction\n  </Text>\n  <BtnMore onClick={onOpenModal}/>\n</HStack>);\n}\n\nconst TimerNext = () => {\n\n  const style = {\n    width : \"50%\",\n    backgroundColor : \"white\",\n    borderRadius : \"5px\"\n  }\n\n  return(<VStack style = {style} p={5} marginTop={5}  >\n    <TimerTitle/>\n    <TimerField/>\n  </VStack>);\n}\n\nconst TimerTitle = () =>{\n  return(\n    <HStack justifyContent=\"center\" w=\"full\">\n      <Text color={SKKUBLUE} fontWeight={700} fontSize=\"2xl\">\n        다음 Transaction 까지\n      </Text>\n    </HStack>\n  );\n}\n\nconst TimerField = () =>{\n  return(<HStack justifyContent=\"center\" w=\"full\">\n  <Text color={SKKUBLUE} fontWeight={700} fontSize=\"9xl\">\n    <Clock />\n  </Text>\n</HStack>);\n}\nconst BtnMore = ({onClick}) =>{\n\n  return(<Box\n    as=\"button\"\n    backgroundColor={SKKUBLUE}\n    color=\"white\"\n    borderRadius=\"3px\"\n    width=\"60px\"\n    fontWeight=\"bold\"\n    onClick={onClick}\n  >\n    + More\n    \n  </Box>)\n}\n\nconst LastBlock = () =>{\n\n  return(<VStack\n    w=\"full\"\n    backgroundColor=\"white\"\n    borderRadius=\"5px\"\n    p={5}\n    marginTop={5}\n>\n    <HStack justifyContent=\"space-between\" w=\"full\">\n        <Text color={SKKUBLUE} fontWeight={700} fontSize=\"lg\">\n            Latest Blocks\n        </Text>\n        <BtnMore/>\n    </HStack>\n    {/*<LatestBlock />*/}\n</VStack>)\n}\n\nexport default Transaction;","import { InjectedConnector } from \"@web3-react/injected-connector\";\n\nexport const injectedConnector = new InjectedConnector({\n  supportedChainIds: [\n    1, // Mainet : 이더리움\n    3, // Ropsten : 이더리움\n    4, // Rinkeby : 이더리움\n    5, // Goerli : 이더리움\n    42, // Kovan : 이더리움\n    1001, // baobab : 클레이튼 (후에 baobab테스트넷이 아닌 메인넷을 사용할 것이라면 클레이튼 메인넷에 맞는 chainid를 추가하면 됩니다.)\n  ],\n});","import { useWeb3React } from \"@web3-react/core\";\nimport { injectedConnector } from \"../../connector\";\nimport { Button, Text, VStack, Link } from \"@chakra-ui/react\";\nimport { SKKUBLUE, SKKUGREEN } from \"../../colors\";\n\nconst TEXT_WELCOME = \"KingoKoin에 오신 것을 환영합니다.\";\nconst TEXT_INTRODUCE = \"서비스 이용을 위해 메타마스크 로그인을 해주세요.\";\nconst TEXT_INSTALL_METAMASK = \"메타마스크 설치하기\";\nconst TEXT_CONNECT_WALLET = '지갑 연결하기';\n\nfunction WalletConnect() {\n  // metamask 로그인 페이지\n  const { activate, active } = useWeb3React();\n  console.log(active);\n\n\n  // todo : Redux 도입 필요\n  const onClick = () => {\n    activate(injectedConnector); //로그인 코드\n  };\n\n  return (\n    <VStack w=\"full\" align=\"center\" justify=\"center\">\n      <VStack bg=\"white\" p={10} borderRadius={20}>\n        <LoginTitle/>\n        <LoginSub/>\n        <BtnInstall/>\n        <BtnConnect onClick={onClick}/>\n      </VStack>\n    </VStack>\n  );\n}\n\n\nconst LoginTitle = () => {\n\n  return(\n    <Text fontSize=\"md\">{TEXT_WELCOME}</Text>\n  );\n};\n\nconst LoginSub = () =>{\n  return(\n    <Text>{TEXT_INTRODUCE}</Text>\n  );\n};\n\nconst BtnInstall = () => {\n\n  return (<Link color={SKKUBLUE} href=\"https://metamask.io/\" isExternal>\n  {TEXT_INSTALL_METAMASK}\n</Link>);\n};\n\nconst BtnConnect = ({onClick}) => {\n\n  const style = {\n    height : \"40px\",\n    width : \"200px\",\n    borderRadius : \"20px\",\n    color : \"white\",\n    fontSize : \"14px\",\n    fontWeight : \"bold\"\n  };\n\n\n  return (<Button colorScheme='green' variant='solid' borderRadius=\"20px\" style = {style}\n    onClick = {onClick}\n    >\n  {TEXT_CONNECT_WALLET}\n</Button>)\n}\n\n\nexport default WalletConnect;","import { Box, Image, Spacer, VStack, Link, Text} from \"@chakra-ui/react\";\nimport WalletConnect from \"../components/login/WalletConnect\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nfunction Login() {\n    return (\n        <VStack  width=\"100%\" align=\"center\" justify='center' >\n            <Image\n                m='10'\n                width = \"300px\"\n                height = \"75px\"\n       \n                src='https://login.skku.edu/resources/img/main_logo_kor.png'\n            />\n\n            <WalletConnect p='5'/> \n        \n            <Link as={RouterLink} to=\"/login\">\n                <Text>\n                    SKKU Login\n                </Text>\n            </Link>\n        </VStack>\n    \n\n        \n    );\n}\n\nexport default Login;\n","const SKKU_LOGIN = \"SKKU_LOGIN\"\n\nexport {\n    SKKU_LOGIN\n};","const COOKIE_EMAIL = 'LOGIN_EMAIL';\n\n\n\nexport { COOKIE_EMAIL };","import { HStack, Input, VStack, Text, Button, Box, InputGroup, InputLeftAddon } from \"@chakra-ui/react\"\nimport { useCallback, useEffect, useState } from \"react\"\nimport { actionSkkuLogin } from \"../redux/skkusign/action\"\nimport { connect, useDispatch } from 'react-redux'\nimport { useCookies } from \"react-cookie\"\nimport { COOKIE_EMAIL } from \"../CookieConst\"\n\n\n\nconst SKKULoginPage = () =>{\n\n    const dispatch = useDispatch();\n\n    const [form, setForm] = useState({id:\"\", pw : \"\"})\n\n    const skkuLogin = ()=>{\n        dispatch(actionSkkuLogin(form.id));\n    }\n\n    const fieldStyle = {\n        borderWidth : \"1px\",\n        borderRadius : \"4px\",\n        borderColor : \"#AFAFAF\",\n        backgroundColor : \"white\",\n       \n        width : \"300px\"\n    }\n\n\n    const [emailCookie, setEmailCookie, removeEmailCookie] = useCookies(COOKIE_EMAIL);\n\n    const updateForm = (title, value)=>{\n        setEmailCookie(COOKIE_EMAIL , value);\n        setSavedEmail(value);\n        setForm({...form,\n                id : value\n            });\n        \n    }\n\n    const [savedEmail, setSavedEmail] = useState(null);\n\n    useEffect(()=>{\n        \n        if(emailCookie !== undefined)\n        {\n            setSavedEmail(emailCookie.LOGIN_EMAIL);\n        }\n\n    },[]);\n    \n    //if(emailCookie !== undefined)\n    //    savedText = emailCookie.LOGIN_EMAIL\n\n    return(<VStack align=\"center\" justifyContent=\"center\" width=\"100%\" spacing = {8}>\n        <Header/>\n        <TextField title = \"성균인 계정\" placeholder=\"user@skku.edu\" savedText = {savedEmail} setForm = {updateForm} width = \"300px\" />\n        <BtLogin onClick={skkuLogin}/>\n    </VStack>)\n}\n\n\nconst Header = ()=>{\n\n    const url = \"https://www.skku.edu/_res/skku/img/skku_s.png\"\n\n\n    return(<Box\n        bgImage={`url('${url}')`}\n        bgPosition=\"center\"\n        bgRepeat=\"no-repeat\"\n        height='200px'\n        width = '200px'\n        bgSize = 'cover'\n      />)\n}\n\n\nconst TextField = ({title,placeholder, savedText, setForm, onChange}) =>{\n\n    const [textValue, setTextValue] = useState(null)\n\n    useEffect(()=>{\n        setTextValue(savedText);\n    });\n\n\n    \n    const setValue = useCallback((value)=>{\n        setForm(title,value);\n    },[])\n\n    return(\n    \n    <InputGroup width = '300px' size='sm'>\n        <InputLeftAddon children = {title}/>\n        <Input value={textValue} placeholder={placeholder} size='xl' background = 'white' onChange={(event)=>\n            {\n                setTextValue(event.target.value);\n            setValue(event.target.value);\n            }\n            }/>\n    </InputGroup>\n    )\n}\n\nconst BtLogin = ({onClick})=>{\n    return(<Button colorScheme='teal' onClick={onClick}\n    fontWeight='400'>\n    메일 보내기\n  </Button>)\n}\n\n\n\n\nexport default SKKULoginPage;","import { SKKU_LOGIN } from \"./const\"\n\nconst actionSkkuLogin = (username, psword) =>{\n    return {\n        type : SKKU_LOGIN,\n        username : username\n    }\n}\n\n\n\nexport {\n    actionSkkuLogin\n};","import { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport NavBar from \"./components/public/Navbar.js\";\nimport { Container, Flex } from \"@chakra-ui/react\";\nimport DashBoard from \"./pages/DashBoard\";\nimport MyPoint from \"./pages/MyPoint\";\nimport Transaction from \"./pages/Transaction\";\nimport Login from \"./pages/Login\";\nimport SKKULoginPage from \"./pages/skkuLogin.js\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useEffect } from \"react\";\n\nconst AppWrap = styled.div`\n  font-size: 12px;\n  font-family: \"Poppins\", sans-serif;\n`;\n\n\n\n\nfunction App() {\n  const { active } = useWeb3React();\n\n  useEffect(()=>{\n    document.title = 'Kingo Koin';\n  });\n\n  return (\n    <AppWrap>\n      <Container maxW=\"full\" bg=\"#E5E5E5\" p={0}>\n        <Flex minH=\"100vh\" h=\"full\">\n          <BrowserRouter>\n            {active ? <Redirect to=\"/dashboard\" /> : <Redirect to=\"/\" />}\n            {active ? <NavBar /> : <></>}\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/login\" component={SKKULoginPage}/>\n            <Route exact path=\"/dashboard\" component={DashBoard} />\n            <Route exact path=\"/my-point\" component={MyPoint} />\n            <Route exact path=\"/check-transactions\" component={Transaction} />\n            \n          </BrowserRouter>\n        </Flex>\n      </Container>\n    </AppWrap>\n  );\n}\n\nexport default App;\n\n\n","import { Web3Provider } from \"@ethersproject/providers\";\n\nfunction getLibrary(provider) {\n  // provider : 메타마스크\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n\nexport default getLibrary;","import axios from \"axios\";\n\nconst skkuLoginAccess = \"https://login.skku.edu/loginAction\"\n\nfunction skkuLogin(username, success, failed)\n{\n\n    axios({\n        url: skkuLoginAccess,\n        method: 'post',\n        headers : {\n            'Access-Control-Allow-Origin': 'login.skku.edu',\n            'Access-Control-Allow-Methods': 'GET, POST, PUT',\n            'Access-Control-Allow-Headers': 'Content-Type',\n\n            'Content-Type': 'text/xml',\n            Origin : \"login.skku.edu\",\n            Referer : \"login.skku.edu\",\n            \"Referrer-Policy\": \"strict-origin-when-cross-origin\",\n            Accept : '*/*'\n        },\n        data: {\n            userid : username,\n        \n        }\n    }).then((response)=>{\n\n        success(response);\n    }).catch((error)=>{\n\n        console.log(error);\n        failed(error);\n    })\n}\n\nexport default skkuLogin;","import skkuLogin from \"../../remote/SkkuLogin\";\nimport { SKKU_LOGIN } from \"./const\";\n\n\nconst initState = {\n    type : undefined,\n    account : {\n\n    }\n}\n\nconst skkuReducer = async (state = initState, action) =>{\n\n    switch(action.type)\n    {\n        case SKKU_LOGIN : \n            await skkuLogin(action.username,(response) =>{\n                return response;\n            }, (response) =>{\n                return state;\n            });\n            break;\n        default : \n            return state;\n    }\n}\n\nexport default skkuReducer;","import { combineReducers } from \"redux\";\nimport skkuLogin from './skkusign/reducer'\n\n\nconst reducer = combineReducers({\n    skkuLogin\n})\n\nexport default reducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport getLibrary from \"./library\";\nimport { createStore } from \"redux\";\nimport reducer from \"./redux/reducer\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Web3ReactProvider getLibrary={getLibrary}>\n            <ChakraProvider>\n                <Provider store={store}>\n                    <App />\n                </Provider>\n            </ChakraProvider>\n        </Web3ReactProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}